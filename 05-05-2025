#.Given a sorted integer array arr[] consisting of distinct elements, where some elements of the array are moved to either of the adjacent positions, i.e. arr[i] may be present at arr[i-1] or arr[i+1].
Given an integer target.  You have to return the index ( 0-based ) of the target in the array. If target is not present return -1.

class Solution {
    public int findTarget(int arr[], int target) {
        // code here
        int l = 0;
        int r = arr.length-1;
        
        while(l <= r){
            int mid = l + (r - l)/2;
            
            if(arr[mid] == target)return mid;
            else if(mid < arr.length -1 && arr[mid + 1] == target) return mid + 1;
            else if(mid > 0 && arr[mid - 1] == target) return mid - 1;
            else if(arr[mid] < target)l = mid + 1;
            else r = mid - 1;
        }
        return -1;
    }
}

