#.Given a sorted and rotated array arr[] of distinct elements, the task is to find the index of a target key. 
Return -1 if the key is not found.

class Solution {
    int search(int[] arr, int key) {
        int left = 0, right = arr.length - 1;

        while (left <= right) {
            int mid = left + (right - left) / 2;

            // Check if mid is the key
            if (arr[mid] == key) return mid;

            // Determine which half is sorted
            if (arr[left] <= arr[mid]) { 
                // Left half is sorted
                if (key >= arr[left] && key < arr[mid]) {
                    right = mid - 1; // Key lies in the left half
                } else {
                    left = mid + 1; // Key lies in the right half
                }
            } else {
                // Right half is sorted
                if (key > arr[mid] && key <= arr[right]) {
                    left = mid + 1; // Key lies in the right half
                } else {
                    right = mid - 1; // Key lies in the left half
                }
            }
        }

        // Key not found
        return -1;
    }
}


