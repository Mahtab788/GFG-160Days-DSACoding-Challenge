#.Given a row-wise sorted 2D matrix mat[][] of size n x m and an integer x, find whether element x is present in the matrix.
Note: In a row-wise sorted matrix, each row is sorted in itself, i.e. for any i, j within bounds, mat[i][j] <= mat[i][j+1].

class Solution {
    // Function to search a given number in row-column sorted matrix.
    public boolean searchRowMatrix(int[][] mat, int x) {
        int n = mat.length; // Number of rows
        int m = mat[0].length; // Number of columns

        // Perform binary search on each row
        for (int i = 0; i < n; i++) {
            if (binarySearch(mat[i], x)) {
                return true; // Found the element in this row
            }
        }

        return false; // Element not found
    }

    // Binary search to find x in a row
    private boolean binarySearch(int[] row, int x) {
        int left = 0, right = row.length - 1;
        
        while (left <= right) {
            int mid = left + (right - left) / 2;
            
            if (row[mid] == x) {
                return true; // Found x in the row
            } else if (row[mid] < x) {
                left = mid + 1; // Search the right half
            } else {
                right = mid - 1; // Search the left half
            }
        }
        
        return false; // x is not in the row
    }
}
