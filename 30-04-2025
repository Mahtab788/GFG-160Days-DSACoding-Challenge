#.Given the head of a linked list, determine whether the list contains a loop. If a loop is present, return the number of nodes in the loop, otherwise return 0.

Note: 'c' is the position of the node which is the next pointer of the last node of the linkedlist. If c is 0, then there is no loop.

class Solution {
    // Function to find the length of a loop in the linked list.
    public int countNodesinLoop(Node head) {
        // code here.
        Map<Node,Integer> hm=new HashMap<>();
        int len=1;
        Node curr=head;
        while(curr!=null){
            if(hm.containsKey(curr)) return len-hm.get(curr);
            hm.put(curr,len);
            len++;
            curr=curr.next;
        }
        return 0;
    }
}
