#.You are given an array arr[] which represents houses arranged in a circle, where each house has a certain value. 
A thief aims to maximize the total stolen value without robbing two adjacent houses.
Determine the maximum amount the thief can steal.

Note: Since the houses are in a circle, the first and last houses are also considered adjacent.

class Solution {
    public int maxValue(int[] arr) {
        int n = arr.length;
        if (n == 1) return arr[0]; // Only one house, loot it.

        return Math.max(rob(arr, 0, n - 2), rob(arr, 1, n - 1));
    }

    private int rob(int[] arr, int start, int end) {
        int prev2 = 0, prev1 = 0;

        for (int i = start; i <= end; i++) {
            int pick = arr[i] + prev2; // Loot current house + best till (i-2)
            int skip = prev1;          // Skip current house, take best till (i-1)
            int curr = Math.max(pick, skip);

            prev2 = prev1; // Update for next iteration
            prev1 = curr;
        }
        return prev1;
    }
}
