#.Given an array arr[] of integers and an integer k, your task is to find the maximum value for each contiguous subarray of size k. 
The output should be an array of maximum values corresponding to each contiguous subarray.

class Solution {
    public ArrayList<Integer> maxOfSubarrays(int arr[], int k) {
        int n = arr.length;
        ArrayList<Integer> result = new ArrayList<>();
        Deque<Integer> deque = new LinkedList<>();

        for (int i = 0; i < n; i++) {
            // Remove elements out of window range (i - k)
            if (!deque.isEmpty() && deque.peekFirst() == i - k) {
                deque.pollFirst();
            }

            // Remove smaller elements in k range as they are useless
            while (!deque.isEmpty() && arr[deque.peekLast()] <= arr[i]) {
                deque.pollLast();
            }

            // Add current index at the end of deque
            deque.addLast(i);

            // The first index of deque is the maximum of the window
            if (i >= k - 1) {
                result.add(arr[deque.peekFirst()]);
            }
        }
        return result;
    }
}
