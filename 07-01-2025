#.You are given an integer target and an array arr[]. You have to find number of pairs in arr[] which sums up to target. It is given that the elements of the arr[] are in sorted order.
Note: pairs should have elements of distinct indexes. 


class Solution {
    public int countPairs(int[] arr, int target) {
        int left = 0;
        int right = arr.length - 1;
        int count = 0;

        while (left < right) {
            int sum = arr[left] + arr[right];
            if (sum == target) {
                if (arr[left] == arr[right]) {
                    // If both pointers point to the same value, count combinations
                    int freq = right - left + 1;
                    count += (freq * (freq - 1)) / 2;
                    break;
                } else {
                    int leftCount = 1, rightCount = 1;

                    // Count duplicates on the left side
                    while (left < right && arr[left] == arr[left + 1]) {
                        leftCount++;
                        left++;
                    }

                    // Count duplicates on the right side
                    while (left < right && arr[right] == arr[right - 1]) {
                        rightCount++;
                        right--;
                    }

                    // Add pairs formed by these counts
                    count += leftCount * rightCount;

                    // Move pointers inward
                    left++;
                    right--;
                }
            } else if (sum < target) {
                left++;
            } else {
                right--;
            }
        }

        return count;
    }
}
