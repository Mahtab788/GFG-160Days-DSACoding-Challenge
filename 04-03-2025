#.Given an array arr[] of non-negative integers, the task is to find the length of the Longest Strictly Increasing Subsequence (LIS).
A subsequence is strictly increasing if each element in the subsequence is strictly less than the next element.

class Solution {
    static int lis(int arr[]) {
        ArrayList<Integer> sub = new ArrayList<>();

        for (int num : arr) {
            int idx = Collections.binarySearch(sub, num);

            // If num is not in the list, binarySearch returns (-insertionPoint - 1)
            if (idx < 0) {
                idx = -idx - 1; // Get correct insertion index
            }

            // Replace element at idx or append if it's the largest
            if (idx == sub.size()) {
                sub.add(num);
            } else {
                sub.set(idx, num);
            }
        }

        return sub.size(); // Length of LIS
    }
}
