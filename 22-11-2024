#.Stock Buy and Sell â€“ Max one Transaction Allowed
Given an array prices[] of length n, representing the prices of the stocks on different days. T
he task is to find the maximum profit possible by buying and selling the stocks on different days when at most one transaction is allowed. 
Here one transaction means 1 buy + 1 Sell. If it is not possible to make a profit then return 0.

Note: Stock must be bought before being sold.

class Solution {
    public int maximumProfit(int prices[]) {
        int n = prices.length;
        if (n == 0) return 0; // Hedge case for empty array
        
        int minPrice = Integer.MAX_VALUE; 
        int maxProfit = 0; 
        
        for (int i = 0; i < n; i++) {
            // Update the minimum price if a smaller value is found
            if (prices[i] < minPrice) {
                minPrice = prices[i];
            }
            // Calculate profit and update maxProfit if greater
            int profit = prices[i] - minPrice;
            if (profit > maxProfit) {
                maxProfit = profit;
            }
        }
        
        return maxProfit; 
    }
}
