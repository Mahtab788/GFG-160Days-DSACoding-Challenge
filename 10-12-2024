#.Given a 2D array intervals[][] of representing intervals where intervals [i] = [starti, endi ]. 
Return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.

class Solution {
    static int minRemoval(int[][] intervals) {
        // Sort intervals by their end times
        Arrays.sort(intervals, (a, b) -> Integer.compare(a[1], b[1]));

        int count = 0; // Count of intervals to remove
        int prevEnd = Integer.MIN_VALUE; // Tracks the end of the last non-overlapping interval

        for (int[] interval : intervals) {
            if (interval[0] < prevEnd) {
                // Overlapping interval, increment removal count
                count++;
            } else {
                // Update the end of the last non-overlapping interval
                prevEnd = interval[1];
            }
        }

        return count;
    }
}
