#.Given a binary tree with a value associated with each node. Your task is to select a subset of nodes such that the sum of their values is maximized,
with the condition that no two selected nodes are directly connected that is, 
if a node is included in the subset, neither its parent nor its children can be included.

class Solution {
    // Function to return the maximum sum of non-adjacent nodes.
    public int getMaxSum(Node root) {
        // code here
        int[] both=dfs(root);
        return Math.max(both[0],both[1]);
    }
    private int[] dfs(Node root){
        if(root==null) return new int[]{0,0};
        int[] left=dfs(root.left),right=dfs(root.right);
        int include=root.data+left[1]+right[1];
        int exclude=Math.max(left[0],left[1])+Math.max(right[0],right[1]);
        return new int[]{include,exclude};
    }
}
