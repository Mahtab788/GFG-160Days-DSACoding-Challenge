Given a positive integer k and an array arr[] denoting heights of towers, you have to modify the height of each tower either by increasing or decreasing them by k only once.
Find out what could be the possible minimum difference of the height of shortest and longest towers after you have modified each tower.

import java.util.Arrays;

class Solution {
    public int getMinDiff(int k, int[] arr) {
        int n = arr.length;
        if (n == 1) return 0; // Only one tower, no difference.

        // Step 1: Sort the array
        Arrays.sort(arr);

        // Step 2: Initialize the difference
        int result = arr[n - 1] - arr[0];

        // Step 3: Set initial min and max after adjustments
        int smallest = arr[0] + k;
        int largest = arr[n - 1] - k;

        for (int i = 0; i < n - 1; i++) {
            int minElement = Math.min(smallest, arr[i + 1] - k);
            int maxElement = Math.max(largest, arr[i] + k);
            result = Math.min(result, maxElement - minElement);
        }

        return result;
    }
}
